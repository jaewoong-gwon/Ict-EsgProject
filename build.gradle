plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.10'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.diffplug.spotless' version '6.11.0'
}

group = 'ict'
version = '0.0.1-SNAPSHOT'

ext {
    set('springCloudVersion', "2022.0.2")
}

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-config-client'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.json:json:20220924'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    // implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j:8.2.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testImplementation 'org.springframework.security:spring-security-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


tasks.register('updateGitHooks', Copy) {
    from(file("${rootProject.rootDir}/.githooks/pre-commit"))
    into(file("${rootProject.rootDir}/.git/hooks"))
}

tasks.register('makeGitHooksExecutable', Exec) {
    commandLine("chmod", "+x", "${rootProject.rootDir}/.git/hooks/pre-commit")
    dependsOn('updateGitHooks')
}

tasks.named('compileJava', JavaCompile) {
    dependsOn('makeGitHooksExecutable')
}


tasks.named('test') {
    useJUnitPlatform()
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

jar {
    enabled = false
}

compileJava.options.encoding = 'UTF-8'


